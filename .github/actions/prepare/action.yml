name: "Prepare env"
description: "Prepare rust environment"
inputs:
  token:
    description: "Token for setup-protoc"
    required: true
runs:
  using: "composite"
  steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-linux-gnu
    - name: Install LLVM and Clang
      id: llvm_setup
      shell: bash
      run: |
        LLVM_VERSION=$(rustc --verbose --version | grep -Po 'LLVM version: \K\d+\.\d+.\d+')
        LLVM_MAJOR_VERSION=$(rustc --verbose --version | grep -Po 'LLVM version: \K\d+')
        echo "LLVM_VERSION=$LLVM_VERSION" >> $GITHUB_OUTPUT
        echi "LLVM_MAJOR_VERSION=$LLVM_MAJOR_VERSION" >>> $GITHUB_OUTPUT
    - name: Install LLVM and Clang
      shell: bash
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-$LLVM_MAJOR_VERSION main"
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libsecp256k1-dev libsodium-dev liblz4-dev
#    - shell: bash
#      run: |
#        sudo apt install --yes libc++abi-${{ steps.llvm_setup.outputs.LLVM_VERSION }}-dev libc++-${{ steps.llvm_setup.outputs.LLVM_VERSION }}-dev
    - uses: arduino/setup-protoc@v2
      with:
        repo-token: ${{ inputs.token }}
#    - shell: bash
#      run: |
#        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${{ steps.llvm_setup.outputs.LLVM_VERSION }} 101
#        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${{ steps.llvm_setup.outputs.LLVM_VERSION }} 101
    - name: Run sccache-cache
      uses: mozilla-actions/sccache-action@v0.0.3

syntax = "proto3";

package ton;

service TvmEmulator {
  rpc Process(stream TvmEmulatorRequest) returns (stream TvmEmulatorResponse);
}

message TvmEmulatorRequest {
  oneof Request {
    TvmEmulatorPrepareRequest prepare = 1;
    TvmEmulatorRunGetMethodRequest run_get_method = 2;
    TvmEmulatorSendExternalMessageRequest send_external_message = 3;
    TvmEmulatorSendInternalMessageRequest send_internal_message = 4;
  }
}

message TvmEmulatorResponse {
  oneof Response {
    TvmEmulatorPrepareResponse prepare = 1;
    TvmEmulatorRunGetMethodResponse run_get_method = 2;
    TvmEmulatorSendExternalMessageResponse send_external_message = 3;
    TvmEmulatorSendInternalMessageResponse send_internal_message = 4;
  }
}

message TvmEmulatorPrepareRequest {
  string code_boc = 1;
  string data_boc = 2;
}

message TvmEmulatorPrepareResponse {
  bool success = 1;
}

message TvmEmulatorRunGetMethodRequest {
  int32 method_id = 1;
  string stack_boc = 2;
}

message TvmEmulatorRunGetMethodResponse {
  int32 vm_exit_code = 1;
  string gas_used = 2;
  string vm_log = 3;
  string stack = 4;
  optional string missing_library = 5;
}

message TvmEmulatorSendExternalMessageRequest {
  string message_body_boc = 1;
}

message TvmEmulatorSendExternalMessageResponse {
  int32 vm_exit_code = 1;
  bool accepted = 2;
  string gas_used = 3;
  string vm_log = 4;
  string new_code = 5;
  string new_data = 6;
  optional string missing_library = 7;
  optional string actions = 8;
}

message TvmEmulatorSendInternalMessageRequest {
  uint64 amount = 1;
  string message_body_boc = 2;
}

message TvmEmulatorSendInternalMessageResponse {
  int32 vm_exit_code = 1;
  bool accepted = 2;
  string gas_used = 3;
  string vm_log = 4;
  string new_code = 5;
  string new_data = 6;
  optional string missing_library = 7;
  optional string actions = 8;
}
